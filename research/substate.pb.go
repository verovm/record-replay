// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: substate.proto

package research

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Substate_TxMessage_TxType int32

const (
	Substate_TxMessage_TXTYPE_LEGACY Substate_TxMessage_TxType = 0
	// Berlin hard fork introduced optional access list
	Substate_TxMessage_TXTYPE_ACCESSLIST Substate_TxMessage_TxType = 1
	// London hard fork introduced optional dynamic fee market
	Substate_TxMessage_TXTYPE_DYNAMICFEE Substate_TxMessage_TxType = 2
)

// Enum value maps for Substate_TxMessage_TxType.
var (
	Substate_TxMessage_TxType_name = map[int32]string{
		0: "TXTYPE_LEGACY",
		1: "TXTYPE_ACCESSLIST",
		2: "TXTYPE_DYNAMICFEE",
	}
	Substate_TxMessage_TxType_value = map[string]int32{
		"TXTYPE_LEGACY":     0,
		"TXTYPE_ACCESSLIST": 1,
		"TXTYPE_DYNAMICFEE": 2,
	}
)

func (x Substate_TxMessage_TxType) Enum() *Substate_TxMessage_TxType {
	p := new(Substate_TxMessage_TxType)
	*p = x
	return p
}

func (x Substate_TxMessage_TxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Substate_TxMessage_TxType) Descriptor() protoreflect.EnumDescriptor {
	return file_substate_proto_enumTypes[0].Descriptor()
}

func (Substate_TxMessage_TxType) Type() protoreflect.EnumType {
	return &file_substate_proto_enumTypes[0]
}

func (x Substate_TxMessage_TxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Substate_TxMessage_TxType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Substate_TxMessage_TxType(num)
	return nil
}

// Deprecated: Use Substate_TxMessage_TxType.Descriptor instead.
func (Substate_TxMessage_TxType) EnumDescriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 4, 0}
}

type Substate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputAlloc  *Substate_Alloc     `protobuf:"bytes,1,req,name=input_alloc,json=inputAlloc" json:"input_alloc,omitempty"`
	OutputAlloc *Substate_Alloc     `protobuf:"bytes,2,req,name=output_alloc,json=outputAlloc" json:"output_alloc,omitempty"`
	BlockEnv    *Substate_BlockEnv  `protobuf:"bytes,3,req,name=block_env,json=blockEnv" json:"block_env,omitempty"`
	TxMessage   *Substate_TxMessage `protobuf:"bytes,4,req,name=tx_message,json=txMessage" json:"tx_message,omitempty"`
	Result      *Substate_Result    `protobuf:"bytes,5,req,name=result" json:"result,omitempty"`
}

func (x *Substate) Reset() {
	*x = Substate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate) ProtoMessage() {}

func (x *Substate) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate.ProtoReflect.Descriptor instead.
func (*Substate) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0}
}

func (x *Substate) GetInputAlloc() *Substate_Alloc {
	if x != nil {
		return x.InputAlloc
	}
	return nil
}

func (x *Substate) GetOutputAlloc() *Substate_Alloc {
	if x != nil {
		return x.OutputAlloc
	}
	return nil
}

func (x *Substate) GetBlockEnv() *Substate_BlockEnv {
	if x != nil {
		return x.BlockEnv
	}
	return nil
}

func (x *Substate) GetTxMessage() *Substate_TxMessage {
	if x != nil {
		return x.TxMessage
	}
	return nil
}

func (x *Substate) GetResult() *Substate_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type Substate_Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   *uint64                          `protobuf:"varint,1,req,name=nonce" json:"nonce,omitempty"`
	Balance []byte                           `protobuf:"bytes,2,req,name=balance" json:"balance,omitempty"`
	Storage []*Substate_Account_StorageEntry `protobuf:"bytes,3,rep,name=storage" json:"storage,omitempty"`
	// Types that are assignable to Contract:
	//
	//	*Substate_Account_Code
	//	*Substate_Account_CodeHash
	Contract isSubstate_Account_Contract `protobuf_oneof:"contract"`
}

func (x *Substate_Account) Reset() {
	*x = Substate_Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_Account) ProtoMessage() {}

func (x *Substate_Account) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_Account.ProtoReflect.Descriptor instead.
func (*Substate_Account) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Substate_Account) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *Substate_Account) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *Substate_Account) GetStorage() []*Substate_Account_StorageEntry {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (m *Substate_Account) GetContract() isSubstate_Account_Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (x *Substate_Account) GetCode() []byte {
	if x, ok := x.GetContract().(*Substate_Account_Code); ok {
		return x.Code
	}
	return nil
}

func (x *Substate_Account) GetCodeHash() []byte {
	if x, ok := x.GetContract().(*Substate_Account_CodeHash); ok {
		return x.CodeHash
	}
	return nil
}

type isSubstate_Account_Contract interface {
	isSubstate_Account_Contract()
}

type Substate_Account_Code struct {
	Code []byte `protobuf:"bytes,4,opt,name=code,oneof"`
}

type Substate_Account_CodeHash struct {
	CodeHash []byte `protobuf:"bytes,5,opt,name=code_hash,json=codeHash,oneof"`
}

func (*Substate_Account_Code) isSubstate_Account_Contract() {}

func (*Substate_Account_CodeHash) isSubstate_Account_Contract() {}

type Substate_AllocEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte            `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	Account *Substate_Account `protobuf:"bytes,2,req,name=account" json:"account,omitempty"`
}

func (x *Substate_AllocEntry) Reset() {
	*x = Substate_AllocEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_AllocEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_AllocEntry) ProtoMessage() {}

func (x *Substate_AllocEntry) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_AllocEntry.ProtoReflect.Descriptor instead.
func (*Substate_AllocEntry) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Substate_AllocEntry) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Substate_AllocEntry) GetAccount() *Substate_Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type Substate_Alloc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alloc []*Substate_AllocEntry `protobuf:"bytes,1,rep,name=alloc" json:"alloc,omitempty"`
}

func (x *Substate_Alloc) Reset() {
	*x = Substate_Alloc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_Alloc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_Alloc) ProtoMessage() {}

func (x *Substate_Alloc) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_Alloc.ProtoReflect.Descriptor instead.
func (*Substate_Alloc) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Substate_Alloc) GetAlloc() []*Substate_AllocEntry {
	if x != nil {
		return x.Alloc
	}
	return nil
}

type Substate_BlockEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coinbase    []byte                              `protobuf:"bytes,1,req,name=coinbase" json:"coinbase,omitempty"`
	Difficulty  []byte                              `protobuf:"bytes,2,req,name=difficulty" json:"difficulty,omitempty"`
	GasLimit    *uint64                             `protobuf:"varint,3,req,name=gas_limit,json=gasLimit" json:"gas_limit,omitempty"`
	Number      *uint64                             `protobuf:"varint,4,req,name=number" json:"number,omitempty"`
	Timestamp   *uint64                             `protobuf:"varint,5,req,name=timestamp" json:"timestamp,omitempty"`
	BlockHashes []*Substate_BlockEnv_BlockHashEntry `protobuf:"bytes,6,rep,name=block_hashes,json=blockHashes" json:"block_hashes,omitempty"`
	// London hard fork introduced BASEFEE instruction
	BaseFee *wrapperspb.BytesValue `protobuf:"bytes,7,opt,name=base_fee,json=baseFee" json:"base_fee,omitempty"`
	// The Merge hard fork replaced DIFFICULTY with PREVRANDAO
	Random *wrapperspb.BytesValue `protobuf:"bytes,8,opt,name=random" json:"random,omitempty"`
}

func (x *Substate_BlockEnv) Reset() {
	*x = Substate_BlockEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_BlockEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_BlockEnv) ProtoMessage() {}

func (x *Substate_BlockEnv) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_BlockEnv.ProtoReflect.Descriptor instead.
func (*Substate_BlockEnv) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Substate_BlockEnv) GetCoinbase() []byte {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *Substate_BlockEnv) GetDifficulty() []byte {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *Substate_BlockEnv) GetGasLimit() uint64 {
	if x != nil && x.GasLimit != nil {
		return *x.GasLimit
	}
	return 0
}

func (x *Substate_BlockEnv) GetNumber() uint64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *Substate_BlockEnv) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *Substate_BlockEnv) GetBlockHashes() []*Substate_BlockEnv_BlockHashEntry {
	if x != nil {
		return x.BlockHashes
	}
	return nil
}

func (x *Substate_BlockEnv) GetBaseFee() *wrapperspb.BytesValue {
	if x != nil {
		return x.BaseFee
	}
	return nil
}

func (x *Substate_BlockEnv) GetRandom() *wrapperspb.BytesValue {
	if x != nil {
		return x.Random
	}
	return nil
}

type Substate_TxMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    *uint64 `protobuf:"varint,1,req,name=nonce" json:"nonce,omitempty"`
	GasPrice []byte  `protobuf:"bytes,2,req,name=gas_price,json=gasPrice" json:"gas_price,omitempty"`
	Gas      *uint64 `protobuf:"varint,3,req,name=gas" json:"gas,omitempty"`
	From     []byte  `protobuf:"bytes,4,req,name=from" json:"from,omitempty"`
	// TxMessage.to is nil for contract creation
	To    *wrapperspb.BytesValue `protobuf:"bytes,5,opt,name=to" json:"to,omitempty"`
	Value []byte                 `protobuf:"bytes,6,req,name=value" json:"value,omitempty"`
	// Types that are assignable to Input:
	//
	//	*Substate_TxMessage_Data
	//	*Substate_TxMessage_InitCodeHash
	Input      isSubstate_TxMessage_Input            `protobuf_oneof:"input"`
	TxType     *Substate_TxMessage_TxType            `protobuf:"varint,9,req,name=tx_type,json=txType,enum=research.Substate_TxMessage_TxType" json:"tx_type,omitempty"`
	AccessList []*Substate_TxMessage_AccessListEntry `protobuf:"bytes,10,rep,name=access_list,json=accessList" json:"access_list,omitempty"`
	// GasFeeCap, GasTipCap from TXTYPE_DYNAMICFEE
	// nil before TXTYPE_DYNAMICFEE
	GasFeeCap *wrapperspb.BytesValue `protobuf:"bytes,11,opt,name=gas_fee_cap,json=gasFeeCap" json:"gas_fee_cap,omitempty"`
	GasTipCap *wrapperspb.BytesValue `protobuf:"bytes,12,opt,name=gas_tip_cap,json=gasTipCap" json:"gas_tip_cap,omitempty"`
}

func (x *Substate_TxMessage) Reset() {
	*x = Substate_TxMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_TxMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_TxMessage) ProtoMessage() {}

func (x *Substate_TxMessage) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_TxMessage.ProtoReflect.Descriptor instead.
func (*Substate_TxMessage) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Substate_TxMessage) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *Substate_TxMessage) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *Substate_TxMessage) GetGas() uint64 {
	if x != nil && x.Gas != nil {
		return *x.Gas
	}
	return 0
}

func (x *Substate_TxMessage) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Substate_TxMessage) GetTo() *wrapperspb.BytesValue {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Substate_TxMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (m *Substate_TxMessage) GetInput() isSubstate_TxMessage_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *Substate_TxMessage) GetData() []byte {
	if x, ok := x.GetInput().(*Substate_TxMessage_Data); ok {
		return x.Data
	}
	return nil
}

func (x *Substate_TxMessage) GetInitCodeHash() []byte {
	if x, ok := x.GetInput().(*Substate_TxMessage_InitCodeHash); ok {
		return x.InitCodeHash
	}
	return nil
}

func (x *Substate_TxMessage) GetTxType() Substate_TxMessage_TxType {
	if x != nil && x.TxType != nil {
		return *x.TxType
	}
	return Substate_TxMessage_TXTYPE_LEGACY
}

func (x *Substate_TxMessage) GetAccessList() []*Substate_TxMessage_AccessListEntry {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *Substate_TxMessage) GetGasFeeCap() *wrapperspb.BytesValue {
	if x != nil {
		return x.GasFeeCap
	}
	return nil
}

func (x *Substate_TxMessage) GetGasTipCap() *wrapperspb.BytesValue {
	if x != nil {
		return x.GasTipCap
	}
	return nil
}

type isSubstate_TxMessage_Input interface {
	isSubstate_TxMessage_Input()
}

type Substate_TxMessage_Data struct {
	Data []byte `protobuf:"bytes,7,opt,name=data,oneof"`
}

type Substate_TxMessage_InitCodeHash struct {
	InitCodeHash []byte `protobuf:"bytes,8,opt,name=init_code_hash,json=initCodeHash,oneof"`
}

func (*Substate_TxMessage_Data) isSubstate_TxMessage_Input() {}

func (*Substate_TxMessage_InitCodeHash) isSubstate_TxMessage_Input() {}

type Substate_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *uint64                `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	Bloom   []byte                 `protobuf:"bytes,2,req,name=bloom" json:"bloom,omitempty"`
	Logs    []*Substate_Result_Log `protobuf:"bytes,3,rep,name=logs" json:"logs,omitempty"`
	GasUsed *uint64                `protobuf:"varint,4,req,name=gas_used,json=gasUsed" json:"gas_used,omitempty"`
}

func (x *Substate_Result) Reset() {
	*x = Substate_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_Result) ProtoMessage() {}

func (x *Substate_Result) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_Result.ProtoReflect.Descriptor instead.
func (*Substate_Result) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Substate_Result) GetStatus() uint64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Substate_Result) GetBloom() []byte {
	if x != nil {
		return x.Bloom
	}
	return nil
}

func (x *Substate_Result) GetLogs() []*Substate_Result_Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Substate_Result) GetGasUsed() uint64 {
	if x != nil && x.GasUsed != nil {
		return *x.GasUsed
	}
	return 0
}

type Substate_Account_StorageEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *Substate_Account_StorageEntry) Reset() {
	*x = Substate_Account_StorageEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_Account_StorageEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_Account_StorageEntry) ProtoMessage() {}

func (x *Substate_Account_StorageEntry) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_Account_StorageEntry.ProtoReflect.Descriptor instead.
func (*Substate_Account_StorageEntry) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Substate_Account_StorageEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Substate_Account_StorageEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Substate_BlockEnv_BlockHashEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *uint64 `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Value []byte  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *Substate_BlockEnv_BlockHashEntry) Reset() {
	*x = Substate_BlockEnv_BlockHashEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_BlockEnv_BlockHashEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_BlockEnv_BlockHashEntry) ProtoMessage() {}

func (x *Substate_BlockEnv_BlockHashEntry) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_BlockEnv_BlockHashEntry.ProtoReflect.Descriptor instead.
func (*Substate_BlockEnv_BlockHashEntry) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Substate_BlockEnv_BlockHashEntry) GetKey() uint64 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *Substate_BlockEnv_BlockHashEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// AccessList from TXTYPE_ACCESSLIST
// nil before TXTYPE_ACCESSLIST
type Substate_TxMessage_AccessListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     []byte   `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	StorageKeys [][]byte `protobuf:"bytes,2,rep,name=storage_keys,json=storageKeys" json:"storage_keys,omitempty"`
}

func (x *Substate_TxMessage_AccessListEntry) Reset() {
	*x = Substate_TxMessage_AccessListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_TxMessage_AccessListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_TxMessage_AccessListEntry) ProtoMessage() {}

func (x *Substate_TxMessage_AccessListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_TxMessage_AccessListEntry.ProtoReflect.Descriptor instead.
func (*Substate_TxMessage_AccessListEntry) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *Substate_TxMessage_AccessListEntry) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Substate_TxMessage_AccessListEntry) GetStorageKeys() [][]byte {
	if x != nil {
		return x.StorageKeys
	}
	return nil
}

type Substate_Result_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte   `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	Topics  [][]byte `protobuf:"bytes,2,rep,name=topics" json:"topics,omitempty"`
	Data    []byte   `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
}

func (x *Substate_Result_Log) Reset() {
	*x = Substate_Result_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Substate_Result_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Substate_Result_Log) ProtoMessage() {}

func (x *Substate_Result_Log) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Substate_Result_Log.ProtoReflect.Descriptor instead.
func (*Substate_Result_Log) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *Substate_Result_Log) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Substate_Result_Log) GetTopics() [][]byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Substate_Result_Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_substate_proto protoreflect.FileDescriptor

var file_substate_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x0f, 0x0a, 0x08, 0x53,
	0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12,
	0x38, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x76, 0x52,
	0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x76, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x78, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x54, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x74, 0x78, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0xf5, 0x01, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x36, 0x0a,
	0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x1a, 0x5c, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x3c, 0x0a, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x33, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x1a, 0x8f, 0x03,
	0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f,
	0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4d, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x76, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65,
	0x12, 0x33, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x1a, 0x38, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x90, 0x05, 0x0a, 0x09, 0x54, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x03, 0x67,
	0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2b, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x78, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54,
	0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f,
	0x63, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x67, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61,
	0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x70,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x09, 0x67, 0x61, 0x73, 0x54, 0x69, 0x70, 0x43, 0x61, 0x70, 0x1a, 0x4e,
	0x0a, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x49,
	0x0a, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x58, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x43, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54,
	0x58, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x58, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x59, 0x4e,
	0x41, 0x4d, 0x49, 0x43, 0x46, 0x45, 0x45, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0xd1, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x31, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x04,
	0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x1a, 0x4b, 0x0a, 0x03, 0x4c, 0x6f, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x72, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68,
}

var (
	file_substate_proto_rawDescOnce sync.Once
	file_substate_proto_rawDescData = file_substate_proto_rawDesc
)

func file_substate_proto_rawDescGZIP() []byte {
	file_substate_proto_rawDescOnce.Do(func() {
		file_substate_proto_rawDescData = protoimpl.X.CompressGZIP(file_substate_proto_rawDescData)
	})
	return file_substate_proto_rawDescData
}

var file_substate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_substate_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_substate_proto_goTypes = []interface{}{
	(Substate_TxMessage_TxType)(0),             // 0: research.Substate.TxMessage.TxType
	(*Substate)(nil),                           // 1: research.Substate
	(*Substate_Account)(nil),                   // 2: research.Substate.Account
	(*Substate_AllocEntry)(nil),                // 3: research.Substate.AllocEntry
	(*Substate_Alloc)(nil),                     // 4: research.Substate.Alloc
	(*Substate_BlockEnv)(nil),                  // 5: research.Substate.BlockEnv
	(*Substate_TxMessage)(nil),                 // 6: research.Substate.TxMessage
	(*Substate_Result)(nil),                    // 7: research.Substate.Result
	(*Substate_Account_StorageEntry)(nil),      // 8: research.Substate.Account.StorageEntry
	(*Substate_BlockEnv_BlockHashEntry)(nil),   // 9: research.Substate.BlockEnv.BlockHashEntry
	(*Substate_TxMessage_AccessListEntry)(nil), // 10: research.Substate.TxMessage.AccessListEntry
	(*Substate_Result_Log)(nil),                // 11: research.Substate.Result.Log
	(*wrapperspb.BytesValue)(nil),              // 12: google.protobuf.BytesValue
}
var file_substate_proto_depIdxs = []int32{
	4,  // 0: research.Substate.input_alloc:type_name -> research.Substate.Alloc
	4,  // 1: research.Substate.output_alloc:type_name -> research.Substate.Alloc
	5,  // 2: research.Substate.block_env:type_name -> research.Substate.BlockEnv
	6,  // 3: research.Substate.tx_message:type_name -> research.Substate.TxMessage
	7,  // 4: research.Substate.result:type_name -> research.Substate.Result
	8,  // 5: research.Substate.Account.storage:type_name -> research.Substate.Account.StorageEntry
	2,  // 6: research.Substate.AllocEntry.account:type_name -> research.Substate.Account
	3,  // 7: research.Substate.Alloc.alloc:type_name -> research.Substate.AllocEntry
	9,  // 8: research.Substate.BlockEnv.block_hashes:type_name -> research.Substate.BlockEnv.BlockHashEntry
	12, // 9: research.Substate.BlockEnv.base_fee:type_name -> google.protobuf.BytesValue
	12, // 10: research.Substate.BlockEnv.random:type_name -> google.protobuf.BytesValue
	12, // 11: research.Substate.TxMessage.to:type_name -> google.protobuf.BytesValue
	0,  // 12: research.Substate.TxMessage.tx_type:type_name -> research.Substate.TxMessage.TxType
	10, // 13: research.Substate.TxMessage.access_list:type_name -> research.Substate.TxMessage.AccessListEntry
	12, // 14: research.Substate.TxMessage.gas_fee_cap:type_name -> google.protobuf.BytesValue
	12, // 15: research.Substate.TxMessage.gas_tip_cap:type_name -> google.protobuf.BytesValue
	11, // 16: research.Substate.Result.logs:type_name -> research.Substate.Result.Log
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_substate_proto_init() }
func file_substate_proto_init() {
	if File_substate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_substate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_AllocEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_Alloc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_BlockEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_TxMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_Account_StorageEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_BlockEnv_BlockHashEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_TxMessage_AccessListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Substate_Result_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_substate_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Substate_Account_Code)(nil),
		(*Substate_Account_CodeHash)(nil),
	}
	file_substate_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Substate_TxMessage_Data)(nil),
		(*Substate_TxMessage_InitCodeHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_substate_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_substate_proto_goTypes,
		DependencyIndexes: file_substate_proto_depIdxs,
		EnumInfos:         file_substate_proto_enumTypes,
		MessageInfos:      file_substate_proto_msgTypes,
	}.Build()
	File_substate_proto = out.File
	file_substate_proto_rawDesc = nil
	file_substate_proto_goTypes = nil
	file_substate_proto_depIdxs = nil
}
