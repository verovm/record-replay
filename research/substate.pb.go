// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: substate.proto

package research

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubstatePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputAlloc  []*SubstatePB_AllocEntry `protobuf:"bytes,1,rep,name=input_alloc,json=inputAlloc,proto3" json:"input_alloc,omitempty"`
	OutputAlloc []*SubstatePB_AllocEntry `protobuf:"bytes,2,rep,name=output_alloc,json=outputAlloc,proto3" json:"output_alloc,omitempty"`
	BlockEnv    *SubstatePB_BlockEnv     `protobuf:"bytes,3,opt,name=block_env,json=blockEnv,proto3" json:"block_env,omitempty"`
	TxMessage   *SubstatePB_TxMessage    `protobuf:"bytes,4,opt,name=tx_message,json=txMessage,proto3" json:"tx_message,omitempty"`
	Result      *SubstatePB_Result       `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SubstatePB) Reset() {
	*x = SubstatePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB) ProtoMessage() {}

func (x *SubstatePB) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB.ProtoReflect.Descriptor instead.
func (*SubstatePB) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0}
}

func (x *SubstatePB) GetInputAlloc() []*SubstatePB_AllocEntry {
	if x != nil {
		return x.InputAlloc
	}
	return nil
}

func (x *SubstatePB) GetOutputAlloc() []*SubstatePB_AllocEntry {
	if x != nil {
		return x.OutputAlloc
	}
	return nil
}

func (x *SubstatePB) GetBlockEnv() *SubstatePB_BlockEnv {
	if x != nil {
		return x.BlockEnv
	}
	return nil
}

func (x *SubstatePB) GetTxMessage() *SubstatePB_TxMessage {
	if x != nil {
		return x.TxMessage
	}
	return nil
}

func (x *SubstatePB) GetResult() *SubstatePB_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SubstatePB_Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint64                             `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Balance []byte                             `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Storage []*SubstatePB_Account_StorageEntry `protobuf:"bytes,3,rep,name=storage,proto3" json:"storage,omitempty"`
	Code    []byte                             `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SubstatePB_Account) Reset() {
	*x = SubstatePB_Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_Account) ProtoMessage() {}

func (x *SubstatePB_Account) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_Account.ProtoReflect.Descriptor instead.
func (*SubstatePB_Account) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SubstatePB_Account) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SubstatePB_Account) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *SubstatePB_Account) GetStorage() []*SubstatePB_Account_StorageEntry {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *SubstatePB_Account) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

type SubstatePB_AllocEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte              `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Account *SubstatePB_Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *SubstatePB_AllocEntry) Reset() {
	*x = SubstatePB_AllocEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_AllocEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_AllocEntry) ProtoMessage() {}

func (x *SubstatePB_AllocEntry) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_AllocEntry.ProtoReflect.Descriptor instead.
func (*SubstatePB_AllocEntry) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 1}
}

func (x *SubstatePB_AllocEntry) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SubstatePB_AllocEntry) GetAccount() *SubstatePB_Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type SubstatePB_BlockEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coinbase    []byte            `protobuf:"bytes,1,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Difficulty  []byte            `protobuf:"bytes,2,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	GasLimit    uint64            `protobuf:"varint,3,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Number      uint64            `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	Timestamp   uint64            `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockHashes map[uint64][]byte `protobuf:"bytes,6,rep,name=block_hashes,json=blockHashes,proto3" json:"block_hashes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BaseFee     []byte            `protobuf:"bytes,7,opt,name=base_fee,json=baseFee,proto3,oneof" json:"base_fee,omitempty"`
}

func (x *SubstatePB_BlockEnv) Reset() {
	*x = SubstatePB_BlockEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_BlockEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_BlockEnv) ProtoMessage() {}

func (x *SubstatePB_BlockEnv) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_BlockEnv.ProtoReflect.Descriptor instead.
func (*SubstatePB_BlockEnv) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 2}
}

func (x *SubstatePB_BlockEnv) GetCoinbase() []byte {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *SubstatePB_BlockEnv) GetDifficulty() []byte {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *SubstatePB_BlockEnv) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *SubstatePB_BlockEnv) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SubstatePB_BlockEnv) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SubstatePB_BlockEnv) GetBlockHashes() map[uint64][]byte {
	if x != nil {
		return x.BlockHashes
	}
	return nil
}

func (x *SubstatePB_BlockEnv) GetBaseFee() []byte {
	if x != nil {
		return x.BaseFee
	}
	return nil
}

type SubstatePB_TxMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// bool check_nonce = 2;
	GasPrice []byte `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Gas      uint64 `protobuf:"varint,4,opt,name=gas,proto3" json:"gas,omitempty"`
	From     []byte `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	To       []byte `protobuf:"bytes,6,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Value    []byte `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	// Types that are assignable to Input:
	//
	//	*SubstatePB_TxMessage_Data
	//	*SubstatePB_TxMessage_InitCodeHash
	Input      isSubstatePB_TxMessage_Input          `protobuf_oneof:"input"`
	AccessList *SubstatePB_TxMessage_AccessListEntry `protobuf:"bytes,10,opt,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	GasFeeCap  []byte                                `protobuf:"bytes,11,opt,name=gas_fee_cap,json=gasFeeCap,proto3,oneof" json:"gas_fee_cap,omitempty"`
	GasTipCap  []byte                                `protobuf:"bytes,12,opt,name=gas_tip_cap,json=gasTipCap,proto3,oneof" json:"gas_tip_cap,omitempty"`
}

func (x *SubstatePB_TxMessage) Reset() {
	*x = SubstatePB_TxMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_TxMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_TxMessage) ProtoMessage() {}

func (x *SubstatePB_TxMessage) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_TxMessage.ProtoReflect.Descriptor instead.
func (*SubstatePB_TxMessage) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 3}
}

func (x *SubstatePB_TxMessage) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SubstatePB_TxMessage) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *SubstatePB_TxMessage) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (m *SubstatePB_TxMessage) GetInput() isSubstatePB_TxMessage_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetData() []byte {
	if x, ok := x.GetInput().(*SubstatePB_TxMessage_Data); ok {
		return x.Data
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetInitCodeHash() []byte {
	if x, ok := x.GetInput().(*SubstatePB_TxMessage_InitCodeHash); ok {
		return x.InitCodeHash
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetAccessList() *SubstatePB_TxMessage_AccessListEntry {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetGasFeeCap() []byte {
	if x != nil {
		return x.GasFeeCap
	}
	return nil
}

func (x *SubstatePB_TxMessage) GetGasTipCap() []byte {
	if x != nil {
		return x.GasTipCap
	}
	return nil
}

type isSubstatePB_TxMessage_Input interface {
	isSubstatePB_TxMessage_Input()
}

type SubstatePB_TxMessage_Data struct {
	Data []byte `protobuf:"bytes,8,opt,name=data,proto3,oneof"`
}

type SubstatePB_TxMessage_InitCodeHash struct {
	InitCodeHash []byte `protobuf:"bytes,9,opt,name=init_code_hash,json=initCodeHash,proto3,oneof"`
}

func (*SubstatePB_TxMessage_Data) isSubstatePB_TxMessage_Input() {}

func (*SubstatePB_TxMessage_InitCodeHash) isSubstatePB_TxMessage_Input() {}

type SubstatePB_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          uint64                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Bloom           []byte                   `protobuf:"bytes,2,opt,name=bloom,proto3" json:"bloom,omitempty"`
	Logs            []*SubstatePB_Result_Log `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
	ContractAddress []byte                   `protobuf:"bytes,4,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	GasUsed         uint64                   `protobuf:"varint,5,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
}

func (x *SubstatePB_Result) Reset() {
	*x = SubstatePB_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_Result) ProtoMessage() {}

func (x *SubstatePB_Result) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_Result.ProtoReflect.Descriptor instead.
func (*SubstatePB_Result) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 4}
}

func (x *SubstatePB_Result) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SubstatePB_Result) GetBloom() []byte {
	if x != nil {
		return x.Bloom
	}
	return nil
}

func (x *SubstatePB_Result) GetLogs() []*SubstatePB_Result_Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *SubstatePB_Result) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *SubstatePB_Result) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type SubstatePB_Account_StorageEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SubstatePB_Account_StorageEntry) Reset() {
	*x = SubstatePB_Account_StorageEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_Account_StorageEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_Account_StorageEntry) ProtoMessage() {}

func (x *SubstatePB_Account_StorageEntry) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_Account_StorageEntry.ProtoReflect.Descriptor instead.
func (*SubstatePB_Account_StorageEntry) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *SubstatePB_Account_StorageEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SubstatePB_Account_StorageEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SubstatePB_TxMessage_AccessListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StorageKeys [][]byte `protobuf:"bytes,2,rep,name=storage_keys,json=storageKeys,proto3" json:"storage_keys,omitempty"`
}

func (x *SubstatePB_TxMessage_AccessListEntry) Reset() {
	*x = SubstatePB_TxMessage_AccessListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_TxMessage_AccessListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_TxMessage_AccessListEntry) ProtoMessage() {}

func (x *SubstatePB_TxMessage_AccessListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_TxMessage_AccessListEntry.ProtoReflect.Descriptor instead.
func (*SubstatePB_TxMessage_AccessListEntry) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *SubstatePB_TxMessage_AccessListEntry) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SubstatePB_TxMessage_AccessListEntry) GetStorageKeys() [][]byte {
	if x != nil {
		return x.StorageKeys
	}
	return nil
}

type SubstatePB_Result_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Topics  [][]byte `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Data    []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubstatePB_Result_Log) Reset() {
	*x = SubstatePB_Result_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstatePB_Result_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstatePB_Result_Log) ProtoMessage() {}

func (x *SubstatePB_Result_Log) ProtoReflect() protoreflect.Message {
	mi := &file_substate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstatePB_Result_Log.ProtoReflect.Descriptor instead.
func (*SubstatePB_Result_Log) Descriptor() ([]byte, []int) {
	return file_substate_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *SubstatePB_Result_Log) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SubstatePB_Result_Log) GetTopics() [][]byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *SubstatePB_Result_Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_substate_proto protoreflect.FileDescriptor

var file_substate_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xb7, 0x0d, 0x0a, 0x0a, 0x53,
	0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x42, 0x12, 0x40, 0x0a, 0x0b, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x42, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x42, 0x0a, 0x0c, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x42, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x12,
	0x3a, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x42, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e,
	0x76, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x76, 0x12, 0x3d, 0x0a, 0x0a, 0x74,
	0x78, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x42, 0x2e, 0x54, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x09, 0x74, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x42,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a,
	0xca, 0x01, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x42, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x1a, 0x36, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x5e, 0x0a, 0x0a,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x42, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xd9, 0x02, 0x0a,
	0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69,
	0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x69,
	0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x51, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x42, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x76, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x1a, 0xe8, 0x03, 0x0a, 0x09, 0x54, 0x78, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x13, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x02, 0x74,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x4f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x50, 0x42, 0x2e, 0x54, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x67, 0x61, 0x73,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02,
	0x52, 0x09, 0x67, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x09, 0x67, 0x61, 0x73, 0x54, 0x69, 0x70, 0x43, 0x61, 0x70,
	0x88, 0x01, 0x01, 0x1a, 0x4e, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x74, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f,
	0x63, 0x61, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x5f,
	0x63, 0x61, 0x70, 0x1a, 0xfe, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x42,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x1a, 0x4b, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_substate_proto_rawDescOnce sync.Once
	file_substate_proto_rawDescData = file_substate_proto_rawDesc
)

func file_substate_proto_rawDescGZIP() []byte {
	file_substate_proto_rawDescOnce.Do(func() {
		file_substate_proto_rawDescData = protoimpl.X.CompressGZIP(file_substate_proto_rawDescData)
	})
	return file_substate_proto_rawDescData
}

var file_substate_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_substate_proto_goTypes = []interface{}{
	(*SubstatePB)(nil),                           // 0: research.SubstatePB
	(*SubstatePB_Account)(nil),                   // 1: research.SubstatePB.Account
	(*SubstatePB_AllocEntry)(nil),                // 2: research.SubstatePB.AllocEntry
	(*SubstatePB_BlockEnv)(nil),                  // 3: research.SubstatePB.BlockEnv
	(*SubstatePB_TxMessage)(nil),                 // 4: research.SubstatePB.TxMessage
	(*SubstatePB_Result)(nil),                    // 5: research.SubstatePB.Result
	(*SubstatePB_Account_StorageEntry)(nil),      // 6: research.SubstatePB.Account.StorageEntry
	nil,                                          // 7: research.SubstatePB.BlockEnv.BlockHashesEntry
	(*SubstatePB_TxMessage_AccessListEntry)(nil), // 8: research.SubstatePB.TxMessage.AccessListEntry
	(*SubstatePB_Result_Log)(nil),                // 9: research.SubstatePB.Result.Log
}
var file_substate_proto_depIdxs = []int32{
	2,  // 0: research.SubstatePB.input_alloc:type_name -> research.SubstatePB.AllocEntry
	2,  // 1: research.SubstatePB.output_alloc:type_name -> research.SubstatePB.AllocEntry
	3,  // 2: research.SubstatePB.block_env:type_name -> research.SubstatePB.BlockEnv
	4,  // 3: research.SubstatePB.tx_message:type_name -> research.SubstatePB.TxMessage
	5,  // 4: research.SubstatePB.result:type_name -> research.SubstatePB.Result
	6,  // 5: research.SubstatePB.Account.storage:type_name -> research.SubstatePB.Account.StorageEntry
	1,  // 6: research.SubstatePB.AllocEntry.account:type_name -> research.SubstatePB.Account
	7,  // 7: research.SubstatePB.BlockEnv.block_hashes:type_name -> research.SubstatePB.BlockEnv.BlockHashesEntry
	8,  // 8: research.SubstatePB.TxMessage.access_list:type_name -> research.SubstatePB.TxMessage.AccessListEntry
	9,  // 9: research.SubstatePB.Result.logs:type_name -> research.SubstatePB.Result.Log
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_substate_proto_init() }
func file_substate_proto_init() {
	if File_substate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_substate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_AllocEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_BlockEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_TxMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_Account_StorageEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_TxMessage_AccessListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstatePB_Result_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_substate_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_substate_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SubstatePB_TxMessage_Data)(nil),
		(*SubstatePB_TxMessage_InitCodeHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_substate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_substate_proto_goTypes,
		DependencyIndexes: file_substate_proto_depIdxs,
		MessageInfos:      file_substate_proto_msgTypes,
	}.Build()
	File_substate_proto = out.File
	file_substate_proto_rawDesc = nil
	file_substate_proto_goTypes = nil
	file_substate_proto_depIdxs = nil
}
